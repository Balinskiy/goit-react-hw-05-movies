{"version":3,"file":"static/js/247.69f4e0ef.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","service/movie-service.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'service/movie-service';\nimport defaultImg from 'images/movie-not-found.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const response = await getCast(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n  console.log(cast);\n  return (\n    <div>\n      <ul>\n        {cast.map(actor => {\n          return (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                    : defaultImg\n                }\n                alt={actor.name}\n              />\n              <p>{actor.name}</p>\n              <p>{actor.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a0679b4ab8f61bde963499da4762960e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('trending/all/day');\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getSearchingMovies = async query => {\n  try {\n    const { data } = await axios.get(`search/movie?query=${query}`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getMoviesDetails = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// import axios from 'axios';\n\n// const getTrendingMovies = async () => {\n//   const options = {\n//     method: 'GET',\n//     url: 'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n//     params: {\n//       language: 'en-US',\n//     },\n//     headers: {\n//       accept: 'application/json',\n//       api_key: 'fb25b8f9a46bee713b124c118f253c1a',\n//     },\n//   };\n//   try {\n//     const response = await axios(options);\n//     return response;\n//   } catch (error) {\n//     console.error('Error fetching trending movies:', error);\n//     throw error;\n//   }\n// };\n\n// export default getTrendingMovies();\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getCast","sent","t0","console","log","message","stop","apply","arguments","_jsx","children","map","actor","_jsxs","src","profile_path","concat","defaultImg","alt","name","character","id","axios","api_key","language","include_adult","getTrendingMovies","_yield$axios$get","data","abrupt","Error","getSearchingMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMoviesDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}